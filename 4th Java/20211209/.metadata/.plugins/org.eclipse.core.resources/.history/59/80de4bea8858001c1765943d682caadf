
public class MainClass {

	public static void main(String[] args) {
		
		/*
			Wrapper Class
			
			- 일반 자료형(char, int, double)을 사용하기 편리하도록 객체로 구현해 놓은 것
			- String : 문자열을 다루기에 편리하도록 객체로 구현해 놓은것!!
			  * 문자열은 "문자열 = 문자 + 문자 + 문자" 구조로 이루어지는데 이렇게 하지 않아도 됨!!
			  * 원래의 문자열은 char chArr[] = { 'h', 'e', 'l', 'l', 'o' }와 같은 형식으로 만들어지는데 너무 불편해
			  * 그래서 String이라는 편리한 도구를 만들어줬따!!
			
			- 일반 자료형과 wrapper 클래스의 명칭을 서로 비교해보자!
			  ---------------------------------------------
			  일반 자료형			|		wrapper class(Obj.)
			  ---------------------------------------------
			  ---------------------------------------------
			  boolean			|		   Boolean
			  ---------------------------------------------
			  ---------------------------------------------
			  byte				|		   Byte				... 잘 안쓰잖어..
			  ---------------------------------------------
			  short				|		   Short
			  ---------------------------------------------
			  int				|		   Integer			... 중요!!
			  ---------------------------------------------
			  long				|		   Long
			  ---------------------------------------------
			  ---------------------------------------------
			  float				|		   Float
			  ---------------------------------------------
			  double			|		   Double			... 중요!!
			  ---------------------------------------------
			  ---------------------------------------------
			  char				|		   Character
			  char[]			|		   String			... 중요!!
			  ---------------------------------------------
			  
			- class는 데이터를 담는 그릇(자료형)에 공간이 구분되어 기능들이 들어있는? 게다가 자료도 담을 수 있는? 그런 느낌??으로 생각하면 좋겠다
			  (일반 자료형에다 기능들을 장착해놓은)
			  
			  
		
		
		*/
		
		
		// Integer == int 자료형과 동일하다! 그런데 이제 기능을 곁들인...
		int i = 123;
		Integer iObj = 123;
		// 원래 모양
		Integer inObj = new Integer(123);
		
		System.out.println("i = " + i);
		System.out.println("iObj = " + iObj);
		
		
		// class란? ===> 설계, 구성, 즉 object(객체)다!!
		// 이 안에는 변수, 함수(메서드)를 추가할 수도 있다!!
		// MyClass cls = new MyClass();		--> new 생성자로 동적할당 가능!
		
		//String str = "hello";
		// 원래 모양
		//String strObj = new String("hello");
		
		
		// 꼭 기억해야 할 사항
		// 숫자 -> 문자열로 변경하는 경우
		Integer objNumber = 123;
		String str = objNumber.toString();
		System.out.println(str);		// 눈에는 숫자로 보이지만 문자열로 변환되었음!!
		
		// 문자열 -> 숫자로 변경하는 경우
		
		// 2진수, 8진수, 10진수, 16진수 변수
		
		
	}

}
